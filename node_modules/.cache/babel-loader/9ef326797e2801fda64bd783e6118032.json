{"ast":null,"code":"\"use strict\";\n\nmodule.exports = {\n  sort: sort\n};\n\nfunction sort(array, compareFn) {\n  return quicksort(array, 0, array.length - 1, compareFn, 3);\n}\n\n;\n\nfunction swap(array, i, j) {\n  var temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n\n;\n\nfunction quicksort(array, left, right, compareFn, divider) {\n  var length = right - left;\n\n  if (length < 27) {\n    for (var i = left + 1; i <= right; i++) {\n      for (var j = i; j > left && compareFn(array[j], array[j - 1]) < 0; j--) {\n        swap(array, j, j - 1);\n      }\n    }\n\n    return array;\n  }\n\n  var third = ~~(length / divider);\n  var m1 = left + third;\n  var m2 = right - third;\n\n  if (m1 <= left) {\n    m1 = left + 1;\n  }\n\n  if (m2 >= right) {\n    m2 = right - 1;\n  }\n\n  if (compareFn(array[m1], array[m2]) < 0) {\n    swap(array, m1, left);\n    swap(array, m2, right);\n  } else {\n    swap(array, m1, right);\n    swap(array, m2, left);\n  }\n\n  var pivot1 = array[left];\n  var pivot2 = array[right];\n  var less = left + 1;\n  var great = right - 1;\n\n  for (var i = less; i <= great; i++) {\n    if (compareFn(array[i], pivot1) < 0) {\n      swap(array, i, less++);\n    } else if (compareFn(array[i], pivot2) > 0) {\n      while (i < great && compareFn(array[great], pivot2) > 0) {\n        --great;\n      }\n\n      swap(array, i, great--);\n\n      if (compareFn(array[i], pivot1) < 0) {\n        swap(array, i, less++);\n      }\n    }\n  }\n\n  var dist = great - less;\n\n  if (dist < 13) {\n    ++divider;\n  }\n\n  swap(array, less - 1, left);\n  swap(array, great + 1, right);\n  quicksort(array, left, less - 2, compareFn, divider);\n  quicksort(array, great + 2, right, compareFn, divider);\n\n  if (dist > length - 13 && pivot1 !== pivot2) {\n    for (var i = less; i <= great; i++) {\n      if (array[i] === pivot1) {\n        swap(array, i, less++);\n      } else if (array[i] === pivot2) {\n        swap(array, i, great--);\n\n        if (array[i] === pivot1) {\n          swap(array, i, less++);\n        }\n      }\n    }\n  }\n\n  if (compareFn(pivot1, pivot2) < 0) {\n    return quicksort(array, less, great, compareFn, divider);\n  }\n\n  return array;\n}\n\n;","map":null,"metadata":{},"sourceType":"script"}