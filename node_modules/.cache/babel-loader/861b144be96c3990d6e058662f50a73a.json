{"ast":null,"code":"import { REQUEST_POSTS_PENDING, REQUEST_POSTS_SUCCESS, REQUEST_POSTS_FAILED } from '../constants';\nexport const requestPosts = () => dispatch => {\n  dispatch({\n    type: REQUEST_POSTS_PENDING\n  });\n  fetch('http://localhost:3000/products/').then(res => res.json()).then(data => {\n    let products = [];\n    let hairstyles = data.filter(post => {\n      if (post.post_type == \"product\") {\n        products.push(post);\n        return false;\n      } else return true;\n    });\n    dispatch({\n      type: REQUEST_POSTS_SUCCESS,\n      payload: {\n        hairstlyes: hairstyles,\n        products: products\n      }\n    });\n  }).catch(error => dispatch({\n    type: REQUEST_POSTS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/LeonVdB/Desktop/slickk/src/Actions/index.js"],"names":["REQUEST_POSTS_PENDING","REQUEST_POSTS_SUCCESS","REQUEST_POSTS_FAILED","requestPosts","dispatch","type","fetch","then","res","json","data","products","hairstyles","filter","post","post_type","push","payload","hairstlyes","catch","error"],"mappings":"AAAA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,oBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAM,EAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAGF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACC,SAAL,IAAkB,SAAtB,EAAiC;AAC/BJ,QAAAA,QAAQ,CAACK,IAAT,CAAcF,IAAd;AACA,eAAO,KAAP;AACD,OAHD,MAIE,OAAO,IAAP;AACH,KANgB,CAAjB;AAOAV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,qBADC;AAEPgB,MAAAA,OAAO,EAAE;AAACC,QAAAA,UAAU,EAAEN,UAAb;AAAyBD,QAAAA,QAAQ,EAAEA;AAAnC;AAFF,KAAD,CAAR;AAID,GAfH,EAgBGQ,KAhBH,CAgBSC,KAAK,IAAIhB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH,oBAAR;AAA8Be,IAAAA,OAAO,EAAEG;AAAvC,GAAD,CAhB1B;AAiBD,CAnBM","sourcesContent":["import {\n  REQUEST_POSTS_PENDING,\n  REQUEST_POSTS_SUCCESS,\n  REQUEST_POSTS_FAILED\n} from '../constants'\n\nexport const requestPosts = () => (dispatch) => {\n  dispatch({ type: REQUEST_POSTS_PENDING })\n  fetch('http://localhost:3000/products/')\n    .then(res => res.json())\n    .then(data => {\n      let products = [];\n      let hairstyles = data.filter((post) => {\n        if (post.post_type == \"product\") {\n          products.push(post)\n          return false\n        } else\n          return true;\n      });\n      dispatch({\n        type: REQUEST_POSTS_SUCCESS,\n        payload: {hairstlyes: hairstyles, products: products}\n      });\n    })\n    .catch(error => dispatch({ type: REQUEST_POSTS_FAILED, payload: error }))\n}\n"]},"metadata":{},"sourceType":"module"}