{"ast":null,"code":"import { REQUEST_POSTS_PENDING, REQUEST_POSTS_SUCCESS, REQUEST_POSTS_FAILED } from './constants';\nexport const requestPosts = () => dispatch => {\n  dispatch({\n    type: REQUEST_POSTS_PENDING\n  });\n  fetch('http://localhost:3000/posts').then(data => {\n    let products = [];\n    let hairstyles = data.filter(post => {\n      if (post.hairtype == null) products.push(post);else return post;\n    });\n    dispatch({\n      type: REQUEST_POSTS_SUCCESS,\n      payload: {\n        hairstlyes: hairstyles,\n        products: products\n      }\n    });\n  }).catch(error => dispatch({\n    type: REQUEST_POSTS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/LeonVdB/Desktop/slickk/src/Actions/index.js"],"names":["REQUEST_POSTS_PENDING","REQUEST_POSTS_SUCCESS","REQUEST_POSTS_FAILED","requestPosts","dispatch","type","fetch","then","data","products","hairstyles","filter","post","hairtype","push","payload","hairstlyes","catch","error"],"mappings":"AAAA,SACEA,qBADF,EAEEC,qBAFF,EAGEC,oBAHF,QAIO,aAJP;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAM,EAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAI;AACZ,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAGF,IAAI,CAACG,MAAL,CAAYC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACC,QAAL,IAAiB,IAArB,EACEJ,QAAQ,CAACK,IAAT,CAAcF,IAAd,EADF,KAGE,OAAOA,IAAP;AACH,KALgB,CAAjB;AAMAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,qBADC;AAEPc,MAAAA,OAAO,EAAE;AAACC,QAAAA,UAAU,EAAEN,UAAb;AAAyBD,QAAAA,QAAQ,EAAEA;AAAnC;AAFF,KAAD,CAAR;AAID,GAbH,EAcGQ,KAdH,CAcSC,KAAK,IAAId,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH,oBAAR;AAA8Ba,IAAAA,OAAO,EAAEG;AAAvC,GAAD,CAd1B;AAeD,CAjBM","sourcesContent":["import {\n  REQUEST_POSTS_PENDING,\n  REQUEST_POSTS_SUCCESS,\n  REQUEST_POSTS_FAILED\n} from './constants'\n\nexport const requestPosts = () => (dispatch) => {\n  dispatch({ type: REQUEST_POSTS_PENDING })\n  fetch('http://localhost:3000/posts')\n    .then(data => {\n      let products = [];\n      let hairstyles = data.filter(post => {\n        if (post.hairtype == null)\n          products.push(post)\n        else\n          return post;\n      });\n      dispatch({\n        type: REQUEST_POSTS_SUCCESS,\n        payload: {hairstlyes: hairstyles, products: products}\n      });\n    })\n    .catch(error => dispatch({ type: REQUEST_POSTS_FAILED, payload: error }))\n}\n"]},"metadata":{},"sourceType":"module"}